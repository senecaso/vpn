#!/usr/bin/env python3

import argparse
import configparser
import sys

from collections import OrderedDict

class multidict(OrderedDict):
    _unique = 0   # class variable

    def __setitem__(self, key, val):
        if isinstance(val, dict) and key == "Peer":
            self._unique += 1
            key += str(self._unique)

        OrderedDict.__setitem__(self, key, val)


def add(args):
    print("ADD %s" % args)
    config = configparser.ConfigParser(defaults=None, comment_prefixes='/', allow_no_value=True, dict_type=multidict, strict=False)
    config.read_file(args.input)
    print("sections: %s" % config.sections())
    # print(config['Peer'].keys())

def rm(args):
    print("RM %s" % args)

def ls(args):
    print("LS: %s" % args)


parser = argparse.ArgumentParser(prog='wg_admin')

subparsers = parser.add_subparsers(help='subcommand')

# ADD subcommand
parser_add = subparsers.add_parser('add', help='add a peer')
parser_add.add_argument('peer', help='peer alias to add')
parser_add.add_argument('-i', '--input', type=argparse.FileType('r'), default='-', help='wg config file')
parser_add.add_argument('-o', '--output', type=argparse.FileType('w'), default=sys.stdout, help='path to store output')
parser_add.add_argument('-t', '--type', choices=['svg', 'png', 'ansiutf', 'conf'], default='conf', help='output type')
parser_add.set_defaults(func=add)

# RM subcommand
parser_rm = subparsers.add_parser('rm', help='remove a user')
parser_rm.add_argument('peer', help='peer alias to remove')
parser_rm.add_argument('-i', '--input', type=argparse.FileType('r'), default='-', help='wg config file')
parser_rm.set_defaults(func=rm)

# LS subcommand
parser_ls = subparsers.add_parser('ls', help='list users')
parser_ls.add_argument('-i', '--input', type=argparse.FileType('r'), default='-', help='wg config file')
parser_ls.set_defaults(func=ls)

args = parser.parse_args()
args.func(args) # call the subcommand function to execute based on the parsed args